language: python
os: linux
git:
  depth: false

#testing
env:
  global:
    - COBAYA_INSTALL_SKIP=polychord,planck_2015,CamSpec2021,2018_highl_CamSpec,unbinned,keck

#Large CamSpec folders tend to hang, so exclude non-base likelihoods from cache
cache:
  directories:
    - /home/travis/build/CosmoPars/packages/code
    - /home/travis/build/CosmoPars/packages/data/planck_supp_data_and_covmats
    - /home/travis/build/CosmoPars/packages/data/planck_2018/baseline
    - /home/travis/build/CosmoPars/packages/data/bicep_keck_2018
    - /home/travis/build/CosmoPars/packages/data/bao_data
    - /home/travis/build/CosmoPars/packages/data/sn_data
    - /home/travis/build/CosmoPars/packages/data/des_data
    - /home/travis/build/CosmoPars/packages/data/planck_2018_pliklite_native
    - /home/travis/build/CosmoPars/packages/data/planck_2018_lowE_native
    - /home/travis/build/CosmoPars/packages/data/planck_2018_lowT_native

# (Pre)Installation
jobs:
  include:
    - if: branch !~ ^test.*
      dist: focal
      name: "Minimum requisites for Cosmology: gcc-7, Python 3.8"
      addons:
        apt:
          packages:
            - gcc-7
            - gfortran-7
      env:
        - GCC_VERSION="7"
      python: "3.8"
    - if: branch !~ ^test.*
      name: "Typical scenario: latest Ubuntu LTS"
      dist: jammy
      addons:
        apt:
          packages:
            - gfortran
      env:
        - GCC_VERSION="ubuntu"
      python: "3.9"
    - if: branch !~ ^test.*
      name: "Anaconda: jammy LTS Python 3.10"
      dist: jammy
      addons:
        apt:
          packages:
            - gfortran
      env:
        - GCC_VERSION="ubuntu"
        - PYDIST="ANACONDA"
        - ANACONDA_CHANNEL="defaults"
      python: "3.10"
    - name: "Latest jammy Python 3.11"
      dist: jammy
      addons:
        apt:
          packages:
            - gfortran
      env:
        - GCC_VERSION="ubuntu"
      python: "3.11"


before_install:
  # Configure right compiler versions
  - if [[ "$GCC_VERSION" != "ubuntu" ]]; then
    mkdir -p gcc-symlinks;
    ln -s /usr/bin/gfortran-$GCC_VERSION gcc-symlinks/gfortran;
    ln -s /usr/bin/gcc-$GCC_VERSION gcc-symlinks/gcc;
    ln -s /usr/bin/g++-$GCC_VERSION gcc-symlinks/g++;
    export PATH=$PWD/gcc-symlinks:$PATH;
    fi
  - if [[ "$GCC_VERSION" == "11" ]]; then
    export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libgfortran.so.5;
    fi
  - gfortran --version
  # Install rest of system requisites
  - sudo apt install openmpi-bin openmpi-common libopenmpi-dev libopenblas-dev liblapack-dev
  # Python requisites
  - if [[ "$PYDIST" == "ANACONDA" ]]; then
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    bash miniconda.sh -b -p $HOME/miniconda;
    export PATH="$HOME/miniconda/bin:$PATH";
    hash -r;
    conda config --set always_yes yes --set changeps1 no;
    conda info -a;
    conda create -q -n test-environment -c $ANACONDA_CHANNEL python=$TRAVIS_PYTHON_VERSION scipy matplotlib cython PyYAML pytest pytest-forked pytest-cov flaky dill coverage flake8;
    source activate test-environment;
    conda install -c conda-forge mpi4py openmpi;
    else
    python -m pip install --upgrade pip setuptools wheel;
    pip install mpi4py pytest-forked pytest-cov flaky matplotlib dill coverage flake8;
    fi
  - python --version

script:
  # Find undeclared references and syntax errors, plus standardize whitespace etc;
  # See https://pycodestyle.pycqa.org/en/latest/intro.html#error-codes
  - flake8 cobaya --select=E713,E704,E703,E714,E741,E10,E11,E20,E22,E23,E25,E27,E301,E302,E304,E9,F405,F406,F5,F6,F7,F8,W1,W2,W3,W6 --show-source --statistics
  # General tests:
  - export COBAYA_PACKAGES_PATH="../packages"
  - coverage run --parallel-mode -m cobaya.install polychord --debug
  - coverage run --parallel-mode -m pytest tests/ -k "not cosmo" --skip-not-installed --no-flaky-report
  # numba can speed things, but makes for some messy logs
  # - pip install numba
  # Cosmology tests:
  - coverage run --parallel-mode -m cobaya.install cosmo-tests --no-progress-bars --debug
  - if [ -n "${CAMB_BRANCH}" ]; then
    rm -rf $COBAYA_PACKAGES_PATH/code/CAMB ;
    git clone --recursive --depth 1 -b $CAMB_BRANCH https://github.com/cmbant/CAMB $COBAYA_PACKAGES_PATH/code/CAMB ;
    python $COBAYA_PACKAGES_PATH/code/CAMB/setup.py build ;
    fi
  # mpi tests
  - mpiexec -np 2 --mca orte_base_help_aggregate 0 --mca btl ^openib --oversubscribe coverage run --parallel-mode -m pytest -x -m mpi tests/ --no-flaky-report ;
  - mkdir covers; mv .coverage.* covers; ls -ltra covers
  - pytest tests/ --cov -vv -s -k "cosmo" --forked --skip-not-installed --no-flaky-report
  - mv .coverage .coverage.pytest; mv covers/.cov* .
  # Test external cosmological likelihoods
  - pip install -e $COBAYA_PACKAGES_PATH/code/CAMB --quiet
  #- git clone --depth=1 https://github.com/CobayaSampler/planck_lensing_external
  #- pip install ./planck_lensing_external --quiet
  #- coverage run --parallel-mode -m unittest plancklensing.tests.test_likes
  - git clone --depth=1 https://github.com/CobayaSampler/example_external_likelihood
  - pip install ./example_external_likelihood --quiet
  - coverage run --parallel-mode -m unittest test_package.tests.test

after_success:
  - bash <(curl -s https://codecov.io/bash)

###############################################################################
deploy: # only if it builds and if the commit has been tagged
  provider: pypi
  username: JesusTorrado
  password:
    secure: FVCgqGT0sMJyvlY3sJFBwvO4RycAbWbVyHl4p9CG7XRSSgVOLGy9RZjAJkX8dJjH06fPNdQDYfkkj1PV8I42y0n4uqKkQ9RB63Yq6skbuuzjXLGQK9Xop10/1GDBhMHietDibzl8ZIuJyibdFYsc3rM/j8QcKjOYpDe10jO8K+dZaXsgAvqHk4P3d3ScG1u+X+wr8K6qik21YbTpiILS0LdUxmP4DWQw/7NKGWDX1b7sImRmvQfO20KuPTMu8pPz9ThZyPl6zEPgtKi2sQej5sgDlfim/heYk4W8Bf7bggS8GLseffssL5ru96eNUWT1OSbxnsEFqyyYepngNHPpvifflvtCiFU+3f7rzzcgYqmybhdM4ZEOk0pL5y/NS/rHn/1iW7Cqxs+GfUCbr9fWuBgKmVuDqEfvtSu83U1x6zz9C3R259Oe6n0vXfCGSfJqiHhsW8wuXx+bODyDaMAUn+gRSCLuqJVQzdcYwF2pGFf1WUH5iTQItUHZjYbAIXdnSqDKnvGalNDJdNsF3vwNEdbe8hFqfHMMzG73ZkkLOCjDW+mswIKYJUflxIyOdRqtB+XE056dA+c8Zwc4ktg4iss/O3ZBtUVPmba/ivpyYm7Fk8EUN/zY+24NK4iKk6z543rfx2w+wNXAuQiwgN2f+JshqI8kzTuCxPTgf2N49ME=
  on:
    tags: true
    python: '3.10'
    branch: master
    repo: CobayaSampler/cobaya
###############################################################################
notifications:
  email:
    recipients:
      - secure: wWS2J0Q413dLa415/iDn/rzwjFjnhCsGogxJeLW64/59NwaXV+spQZvgwfM+dKFt6kEvKZ4yPE+zXOgcpjp5lLSSWoJCaZy3q6rm7qEAEXxJCtH/4yMuLI0nWNxQRqVaOEq7q8e8jppQ/PBIUiqiT3EQlcNqagMReQEhr+M7hKtVnmA4XiFxmrp1H8aWhVvZWPWLPNtafPLX5CA2Ch3CJ09t591N3baZR0yOWwtEDeBZAHjbswTkNCVR6daUmOdbpFFti/Pdj7YmH1WkFTuEqfwuZiRJBrmyOGlARJZ4PybDK6npBXP393W2663TTIx0M4hT98YupWDXhC87WYAICBasySShxt/2lN2wqseHQlnfzPzmurZpim9choX5iDd/TTPyvhBk/xxT5G6RCeq2/vWwwWa4Owe20T2ep+8pYl0x9sNZyS+C67MOWsIs66dWEPxS4fOgsb6lBST9A8pv2Mfr5DHW8OLGAiIXI9mkeOqZkxlTxywQ5kKAO8hPkmzI7TrGH5drMkJDMqdGZSVC0f7y82RfQFLiv5aQp/xFkZKW7FzMi8DYBHJLfelpszfzyCeibQxQR7aPk6r6UbZhMw9Bd9KVpOV9Ag3EZ44MuVIDxA688cmdka4Swjw2VMWhTYQNGF1mB5WfsgtXfzpA8st7YZZJaysy+iXeoPML+is=
